global:
  version: '2025.6.5'
  labels:
    app: sschool
    team: vaam-store

app:
  defaultPodOptions:
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000

  controllers:
    main:
      type: deployment
      replicas: 2
      labels:
        main: main-app
      initContainers:
        migrations:
          image:
            repository: ghcr.io/adorsys-gis/sschool-migrations
            tag: '{{ .Values.global.version }}'
            pullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: '{{ .Release.Name }}-db'

          resources:
            requests:
              cpu: 125m
              memory: 256Mi
            limits:
              cpu: 400m
              memory: 512Mi
      containers:
        app:
          image:
            repository: ghcr.io/adorsys-gis/sschool
            tag: '{{ .Values.global.version }}'
            pullPolicy: IfNotPresent

          resources:
            requests:
              cpu: 125m
              memory: 256Mi
            limits:
              cpu: 400m
              memory: 512Mi

          # -- ConfigMap to be loaded as environment variables
          envFrom:
            - configMapRef:
                name: '{{ .Release.Name }}-config'
            - configMapRef:
                name: '{{ .Release.Name }}-otel'
            - configMapRef:
                name: '{{ .Release.Name }}-redis'
            - secretRef:
                name: '{{ .Release.Name }}-s3'
            - secretRef:
                name: '{{ .Release.Name }}-auth'
            - secretRef:
                name: '{{ .Release.Name }}-db'
            - secretRef:
                name: '{{ .Release.Name }}-redis'
            - secretRef:
                name: '{{ .Release.Name }}-ai'

  service:
    app:
      enabled: true
      annotations: {}
      nameOverride: service
      type: ClusterIP
      controller: main
      ports:
        http:
          enabled: true
          port: 3000
          targetPort: 3000

  ingress:
    app:
      enabled: true
      annotations: {}
      nameOverride: ingress
      #className: 'nginx'
      hosts:
        - host: sschool.example.com
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: app
                port: http
      tls:
        - secretName: sschool-example-com-secret
          hosts:
            - sschool.example.com

  configMaps:
    config:
      enabled: true
      annotations:
        description: 'Common configuration for the SSchool.'
      data:
        AUTH_KEYCLOAK_ISSUER: https://kec.example.com/realms/main
        NEXT_PUBLIC_IMAGE_LOADER_URL: https://imxprox.ssegning.com

        AUTH_SESSION_MAX_AGE: '2592000'
        AUTH_SESSION_UPDATE_AGE: '2592000'

        S3_ENDPOINT: s3.example.com
        S3_PORT: '443'
        S3_SCHEME: https
        S3_BUCKET: sschool
        S3_CDN_URL: https://s3.example.com
    otel:
      enabled: true
      annotations:
        description: 'OTEL configuration for the SSchool.'
      data:
        OTEL_EXPORTER_OTLP_ENDPOINT: 'https://otel.example.com'
    redis:
      enabled: true
      annotations:
        description: 'Redis configuration for the SSchool.'
      data:
        REDIS_PREFIX: 'sschool:'

  secrets:
    s3:
      enabled: true
      annotations:
        description: 'S3 configuration for the SSchool.'
      stringData:
        S3_ACCESS_KEY: 'minio'
        S3_SECRET_KEY: 'minio123'
    smtp:
      enabled: true
      annotations:
        description: 'SMTP configuration for the SSchool.'
      stringData:
        SMTP_URL: 'smtp+ssl://user:password@smtp.example:582'
    auth:
      enabled: true
      annotations:
        description: 'Auth configuration for the SSchool.'
      stringData:
        AUTH_SECRET: 'gfhZ+94pqhGDi03RCD/6klIbTd92V5yA8G+oEN9c6pk='
        AUTH_KEYCLOAK_ID: 'sschool'
        AUTH_KEYCLOAK_SECRET: 'someSecret'
    db:
      enabled: true
      annotations:
        description: 'Auth configuration for the SSchool.'
      stringData:
        DATABASE_URL: 'postgresql+ssl://gisapply:gisapply-password@localhost:5432/gisapply?schema=public'
    redis:
      stringData:
        REDIS_URL: 'redis://${redis_host}:${redis_port}'
    ai:
      stringData:
        OPENAI_KEY: ''
        OPENAI_URL: ''

        OPENAI_MAX_TOKENS: '1000'
        OPENAI_PAGE_DESCRIPTION_MAX_TOKEN: '50'
        OPENAI_PAGE_LAYOUT_MODEL: 'gpt-4o'
        OPENAI_PAGE_CONTENT_MODEL: 'gemini-2.0-flash-lite'

  networkpolicies:
    main:
      enabled: true
      controller: main
      policyTypes:
        - Ingress
      rules:
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app: sschool
            ports:
              - protocol: TCP
                port: 3000
